import{_ as t,c as i,a as e,b as o,t as r,d as n,o as l}from"./app.9a3f3b95.js";const s="/assets/web-create-api-token.65c53fa1.png",v=JSON.parse('{"title":"API","description":"","frontmatter":{"title":"API","editLink":true},"headers":[{"level":2,"title":"Getting an API token","slug":"getting-an-api-token","link":"#getting-an-api-token","children":[]},{"level":2,"title":"The GraphQL API","slug":"the-graphql-api","link":"#the-graphql-api","children":[{"level":3,"title":"Commonly used methods","slug":"commonly-used-methods","link":"#commonly-used-methods","children":[]}]},{"level":2,"title":"Sample Apps:","slug":"sample-apps","link":"#sample-apps","children":[]}],"relativePath":"integrations/api.md"}'),p={name:"integrations/api.md"},h={id:"frontmatter-title",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=n('<nav class="table-of-contents"><ul><li><a href="#getting-an-api-token">Getting an API token</a></li><li><a href="#the-graphql-api">The GraphQL API</a><ul><li><a href="#commonly-used-methods">Commonly used methods</a></li></ul></li><li><a href="#sample-apps">Sample Apps:</a></li></ul></nav><p>Omnivore exposes a graphql API that can be authenticated with an API token.</p><h2 id="getting-an-api-token" tabindex="-1">Getting an API token <a class="header-anchor" href="#getting-an-api-token" aria-hidden="true">#</a></h2><ul><li>Go to <a href="https://omnivore.app/settings/api" target="_blank" rel="noreferrer">/settings/api</a></li><li>Click <code>Create</code></li><li>Choose a descriptive name for your API key</li><li>Choose an expiration time. When an API key expires it will stop working.</li><li>Copy the API key to your pasteboard.</li></ul><p><img src="'+s+'" alt="Creating an API token"></p><div class="tip custom-block"><p class="custom-block-title">Once your API key is created you will not be able to access it&#39;s value again.</p></div><h2 id="the-graphql-api" tabindex="-1">The GraphQL API <a class="header-anchor" href="#the-graphql-api" aria-hidden="true">#</a></h2><p>Reference documentation is not created for the GraphQL API, but the schema can be accessed <a href="https://github.com/omnivore-app/omnivore/blob/main/packages/api/src/schema.ts" target="_blank" rel="noreferrer">on GitHub</a>.</p><h3 id="commonly-used-methods" tabindex="-1">Commonly used methods <a class="header-anchor" href="#commonly-used-methods" aria-hidden="true">#</a></h3><ul><li><code>search</code>: Return a set of pages based on a search term. Use an empty string to get all pages.</li><li><code>article</code>: Get a single article and its content</li><li><code>saveUrl</code>: Save a URL</li><li><code>savePage</code>: Save a page with supplied HTML content</li></ul><h2 id="sample-apps" tabindex="-1">Sample Apps: <a class="header-anchor" href="#sample-apps" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/davidohlin/instapaper-to-omnivore-import" target="_blank" rel="noreferrer">omnivore-import</a>: A typescript tool for importing a library previously exported from Instapaper (written in TypeScript)</li><li><a href="https://github.com/laurentkempe/omnivore-api-demo-csharp" target="_blank" rel="noreferrer">omnivore-api-demo-csharp</a>: Download all your articles and save in Markdown format (written in C#)</li></ul>',12);function m(a,u,g,f,_,k){return l(),i("div",null,[e("h1",h,[o(r(a.$frontmatter.title)+" ",1),c]),d])}const y=t(p,[["render",m]]);export{v as __pageData,y as default};
